package com.produce.dao;

import com.produce.dao.sqlProvider.TJournalEventSqlProvider;
import com.produce.entity.TJournalEvent;
import com.produce.entity.TJournalEventCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface TJournalEventMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @SelectProvider(type= TJournalEventSqlProvider.class, method="countByExample")
    long countByExample(TJournalEventCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @DeleteProvider(type=TJournalEventSqlProvider.class, method="deleteByExample")
    int deleteByExample(TJournalEventCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @Delete({
        "delete from t_journal_event",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @Insert({
        "insert into t_journal_event (id, operating_id, ",
        "operating_name, ip, ",
        "operating_content, status, ",
        "create_time)",
        "values (#{id,jdbcType=INTEGER}, #{operatingId,jdbcType=INTEGER}, ",
        "#{operatingName,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, ",
        "#{operatingContent,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, ",
        "#{createTime,jdbcType=VARCHAR})"
    })
    int insert(TJournalEvent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @InsertProvider(type=TJournalEventSqlProvider.class, method="insertSelective")
    int insertSelective(TJournalEvent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @SelectProvider(type=TJournalEventSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="operating_id", property="operatingId", jdbcType=JdbcType.INTEGER),
        @Result(column="operating_name", property="operatingName", jdbcType=JdbcType.INTEGER),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="operating_content", property="operatingContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.VARCHAR)
    })
    List<TJournalEvent> selectByExample(TJournalEventCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, operating_id, operating_name, ip, operating_content, status, create_time",
        "from t_journal_event",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="operating_id", property="operatingId", jdbcType=JdbcType.INTEGER),
        @Result(column="operating_name", property="operatingName", jdbcType=JdbcType.INTEGER),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="operating_content", property="operatingContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.VARCHAR)
    })
    TJournalEvent selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TJournalEventSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") TJournalEvent record, @Param("example") TJournalEventCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TJournalEventSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") TJournalEvent record, @Param("example") TJournalEventCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @UpdateProvider(type=TJournalEventSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(TJournalEvent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_journal_event
     *
     * @mbg.generated
     */
    @Update({
        "update t_journal_event",
        "set operating_id = #{operatingId,jdbcType=INTEGER},",
          "operating_name = #{operatingName,jdbcType=INTEGER},",
          "ip = #{ip,jdbcType=VARCHAR},",
          "operating_content = #{operatingContent,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=INTEGER},",
          "create_time = #{createTime,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(TJournalEvent record);
}